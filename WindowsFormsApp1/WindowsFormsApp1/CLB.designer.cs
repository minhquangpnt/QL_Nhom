#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsApp1
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLHOATDONG")]
	public partial class CLBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDANGKY(DANGKY instance);
    partial void UpdateDANGKY(DANGKY instance);
    partial void DeleteDANGKY(DANGKY instance);
    partial void InsertHOATDONG(HOATDONG instance);
    partial void UpdateHOATDONG(HOATDONG instance);
    partial void DeleteHOATDONG(HOATDONG instance);
    partial void InsertSUKIEN(SUKIEN instance);
    partial void UpdateSUKIEN(SUKIEN instance);
    partial void DeleteSUKIEN(SUKIEN instance);
    partial void InsertTHANHVIEN(THANHVIEN instance);
    partial void UpdateTHANHVIEN(THANHVIEN instance);
    partial void DeleteTHANHVIEN(THANHVIEN instance);
    #endregion
		
		public CLBDataContext() : 
				base(global::WindowsFormsApp1.Properties.Settings.Default.QLHOATDONGConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public CLBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CLBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CLBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CLBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DANGKY> DANGKies
		{
			get
			{
				return this.GetTable<DANGKY>();
			}
		}
		
		public System.Data.Linq.Table<HOATDONG> HOATDONGs
		{
			get
			{
				return this.GetTable<HOATDONG>();
			}
		}
		
		public System.Data.Linq.Table<SUKIEN> SUKIENs
		{
			get
			{
				return this.GetTable<SUKIEN>();
			}
		}
		
		public System.Data.Linq.Table<THANHVIEN> THANHVIENs
		{
			get
			{
				return this.GetTable<THANHVIEN>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DANGKY")]
	public partial class DANGKY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSK;
		
		private string _MaTV;
		
		private EntityRef<SUKIEN> _SUKIEN;
		
		private EntityRef<THANHVIEN> _THANHVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSKChanging(string value);
    partial void OnMaSKChanged();
    partial void OnMaTVChanging(string value);
    partial void OnMaTVChanged();
    #endregion
		
		public DANGKY()
		{
			this._SUKIEN = default(EntityRef<SUKIEN>);
			this._THANHVIEN = default(EntityRef<THANHVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSK", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSK
		{
			get
			{
				return this._MaSK;
			}
			set
			{
				if ((this._MaSK != value))
				{
					if (this._SUKIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSKChanging(value);
					this.SendPropertyChanging();
					this._MaSK = value;
					this.SendPropertyChanged("MaSK");
					this.OnMaSKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTV
		{
			get
			{
				return this._MaTV;
			}
			set
			{
				if ((this._MaTV != value))
				{
					if (this._THANHVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTVChanging(value);
					this.SendPropertyChanging();
					this._MaTV = value;
					this.SendPropertyChanged("MaTV");
					this.OnMaTVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SUKIEN_DANGKY", Storage="_SUKIEN", ThisKey="MaSK", OtherKey="MaSK", IsForeignKey=true)]
		public SUKIEN SUKIEN
		{
			get
			{
				return this._SUKIEN.Entity;
			}
			set
			{
				SUKIEN previousValue = this._SUKIEN.Entity;
				if (((previousValue != value) 
							|| (this._SUKIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SUKIEN.Entity = null;
						previousValue.DANGKies.Remove(this);
					}
					this._SUKIEN.Entity = value;
					if ((value != null))
					{
						value.DANGKies.Add(this);
						this._MaSK = value.MaSK;
					}
					else
					{
						this._MaSK = default(string);
					}
					this.SendPropertyChanged("SUKIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THANHVIEN_DANGKY", Storage="_THANHVIEN", ThisKey="MaTV", OtherKey="MaTV", IsForeignKey=true)]
		public THANHVIEN THANHVIEN
		{
			get
			{
				return this._THANHVIEN.Entity;
			}
			set
			{
				THANHVIEN previousValue = this._THANHVIEN.Entity;
				if (((previousValue != value) 
							|| (this._THANHVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THANHVIEN.Entity = null;
						previousValue.DANGKies.Remove(this);
					}
					this._THANHVIEN.Entity = value;
					if ((value != null))
					{
						value.DANGKies.Add(this);
						this._MaTV = value.MaTV;
					}
					else
					{
						this._MaTV = default(string);
					}
					this.SendPropertyChanged("THANHVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOATDONG")]
	public partial class HOATDONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHD;
		
		private string _TenHD;
		
		private EntitySet<SUKIEN> _SUKIENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHDChanging(string value);
    partial void OnMaHDChanged();
    partial void OnTenHDChanging(string value);
    partial void OnTenHDChanged();
    #endregion
		
		public HOATDONG()
		{
			this._SUKIENs = new EntitySet<SUKIEN>(new Action<SUKIEN>(this.attach_SUKIENs), new Action<SUKIEN>(this.detach_SUKIENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHD", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHD
		{
			get
			{
				return this._MaHD;
			}
			set
			{
				if ((this._MaHD != value))
				{
					this.OnMaHDChanging(value);
					this.SendPropertyChanging();
					this._MaHD = value;
					this.SendPropertyChanged("MaHD");
					this.OnMaHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenHD", DbType="NVarChar(50)")]
		public string TenHD
		{
			get
			{
				return this._TenHD;
			}
			set
			{
				if ((this._TenHD != value))
				{
					this.OnTenHDChanging(value);
					this.SendPropertyChanging();
					this._TenHD = value;
					this.SendPropertyChanged("TenHD");
					this.OnTenHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOATDONG_SUKIEN", Storage="_SUKIENs", ThisKey="MaHD", OtherKey="MaHD")]
		public EntitySet<SUKIEN> SUKIENs
		{
			get
			{
				return this._SUKIENs;
			}
			set
			{
				this._SUKIENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SUKIENs(SUKIEN entity)
		{
			this.SendPropertyChanging();
			entity.HOATDONG = this;
		}
		
		private void detach_SUKIENs(SUKIEN entity)
		{
			this.SendPropertyChanging();
			entity.HOATDONG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SUKIEN")]
	public partial class SUKIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSK;
		
		private string _TenSK;
		
		private string _DiaDiem;
		
		private System.Nullable<System.DateTime> _NgayBD;
		
		private string _MaHD;
		
		private EntitySet<DANGKY> _DANGKies;
		
		private EntityRef<HOATDONG> _HOATDONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSKChanging(string value);
    partial void OnMaSKChanged();
    partial void OnTenSKChanging(string value);
    partial void OnTenSKChanged();
    partial void OnDiaDiemChanging(string value);
    partial void OnDiaDiemChanged();
    partial void OnNgayBDChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayBDChanged();
    partial void OnMaHDChanging(string value);
    partial void OnMaHDChanged();
    #endregion
		
		public SUKIEN()
		{
			this._DANGKies = new EntitySet<DANGKY>(new Action<DANGKY>(this.attach_DANGKies), new Action<DANGKY>(this.detach_DANGKies));
			this._HOATDONG = default(EntityRef<HOATDONG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSK", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSK
		{
			get
			{
				return this._MaSK;
			}
			set
			{
				if ((this._MaSK != value))
				{
					this.OnMaSKChanging(value);
					this.SendPropertyChanging();
					this._MaSK = value;
					this.SendPropertyChanged("MaSK");
					this.OnMaSKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSK", DbType="NVarChar(50)")]
		public string TenSK
		{
			get
			{
				return this._TenSK;
			}
			set
			{
				if ((this._TenSK != value))
				{
					this.OnTenSKChanging(value);
					this.SendPropertyChanging();
					this._TenSK = value;
					this.SendPropertyChanged("TenSK");
					this.OnTenSKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaDiem", DbType="NVarChar(50)")]
		public string DiaDiem
		{
			get
			{
				return this._DiaDiem;
			}
			set
			{
				if ((this._DiaDiem != value))
				{
					this.OnDiaDiemChanging(value);
					this.SendPropertyChanging();
					this._DiaDiem = value;
					this.SendPropertyChanged("DiaDiem");
					this.OnDiaDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBD", DbType="Date")]
		public System.Nullable<System.DateTime> NgayBD
		{
			get
			{
				return this._NgayBD;
			}
			set
			{
				if ((this._NgayBD != value))
				{
					this.OnNgayBDChanging(value);
					this.SendPropertyChanging();
					this._NgayBD = value;
					this.SendPropertyChanged("NgayBD");
					this.OnNgayBDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHD", DbType="Char(10)")]
		public string MaHD
		{
			get
			{
				return this._MaHD;
			}
			set
			{
				if ((this._MaHD != value))
				{
					if (this._HOATDONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHDChanging(value);
					this.SendPropertyChanging();
					this._MaHD = value;
					this.SendPropertyChanged("MaHD");
					this.OnMaHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SUKIEN_DANGKY", Storage="_DANGKies", ThisKey="MaSK", OtherKey="MaSK")]
		public EntitySet<DANGKY> DANGKies
		{
			get
			{
				return this._DANGKies;
			}
			set
			{
				this._DANGKies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOATDONG_SUKIEN", Storage="_HOATDONG", ThisKey="MaHD", OtherKey="MaHD", IsForeignKey=true)]
		public HOATDONG HOATDONG
		{
			get
			{
				return this._HOATDONG.Entity;
			}
			set
			{
				HOATDONG previousValue = this._HOATDONG.Entity;
				if (((previousValue != value) 
							|| (this._HOATDONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOATDONG.Entity = null;
						previousValue.SUKIENs.Remove(this);
					}
					this._HOATDONG.Entity = value;
					if ((value != null))
					{
						value.SUKIENs.Add(this);
						this._MaHD = value.MaHD;
					}
					else
					{
						this._MaHD = default(string);
					}
					this.SendPropertyChanged("HOATDONG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DANGKies(DANGKY entity)
		{
			this.SendPropertyChanging();
			entity.SUKIEN = this;
		}
		
		private void detach_DANGKies(DANGKY entity)
		{
			this.SendPropertyChanging();
			entity.SUKIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THANHVIEN")]
	public partial class THANHVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaTV;
		
		private string _TenTV;
		
		private string _DiaChiTV;
		
		private System.Nullable<System.DateTime> _NgaySinhTV;
		
		private string _TenTK;
		
		private string _MatKhau;
		
		private System.Nullable<int> _TYPE;
		
		private EntitySet<DANGKY> _DANGKies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTVChanging(string value);
    partial void OnMaTVChanged();
    partial void OnTenTVChanging(string value);
    partial void OnTenTVChanged();
    partial void OnDiaChiTVChanging(string value);
    partial void OnDiaChiTVChanged();
    partial void OnNgaySinhTVChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhTVChanged();
    partial void OnTenTKChanging(string value);
    partial void OnTenTKChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnTYPEChanging(System.Nullable<int> value);
    partial void OnTYPEChanged();
    #endregion
		
		public THANHVIEN()
		{
			this._DANGKies = new EntitySet<DANGKY>(new Action<DANGKY>(this.attach_DANGKies), new Action<DANGKY>(this.detach_DANGKies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTV
		{
			get
			{
				return this._MaTV;
			}
			set
			{
				if ((this._MaTV != value))
				{
					this.OnMaTVChanging(value);
					this.SendPropertyChanging();
					this._MaTV = value;
					this.SendPropertyChanged("MaTV");
					this.OnMaTVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTV", DbType="NVarChar(50)")]
		public string TenTV
		{
			get
			{
				return this._TenTV;
			}
			set
			{
				if ((this._TenTV != value))
				{
					this.OnTenTVChanging(value);
					this.SendPropertyChanging();
					this._TenTV = value;
					this.SendPropertyChanged("TenTV");
					this.OnTenTVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiTV", DbType="NVarChar(50)")]
		public string DiaChiTV
		{
			get
			{
				return this._DiaChiTV;
			}
			set
			{
				if ((this._DiaChiTV != value))
				{
					this.OnDiaChiTVChanging(value);
					this.SendPropertyChanging();
					this._DiaChiTV = value;
					this.SendPropertyChanged("DiaChiTV");
					this.OnDiaChiTVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinhTV", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySinhTV
		{
			get
			{
				return this._NgaySinhTV;
			}
			set
			{
				if ((this._NgaySinhTV != value))
				{
					this.OnNgaySinhTVChanging(value);
					this.SendPropertyChanging();
					this._NgaySinhTV = value;
					this.SendPropertyChanged("NgaySinhTV");
					this.OnNgaySinhTVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTK", DbType="Char(20)")]
		public string TenTK
		{
			get
			{
				return this._TenTK;
			}
			set
			{
				if ((this._TenTK != value))
				{
					this.OnTenTKChanging(value);
					this.SendPropertyChanging();
					this._TenTK = value;
					this.SendPropertyChanged("TenTK");
					this.OnTenTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="Char(20)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYPE", DbType="Int")]
		public System.Nullable<int> TYPE
		{
			get
			{
				return this._TYPE;
			}
			set
			{
				if ((this._TYPE != value))
				{
					this.OnTYPEChanging(value);
					this.SendPropertyChanging();
					this._TYPE = value;
					this.SendPropertyChanged("TYPE");
					this.OnTYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THANHVIEN_DANGKY", Storage="_DANGKies", ThisKey="MaTV", OtherKey="MaTV")]
		public EntitySet<DANGKY> DANGKies
		{
			get
			{
				return this._DANGKies;
			}
			set
			{
				this._DANGKies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DANGKies(DANGKY entity)
		{
			this.SendPropertyChanging();
			entity.THANHVIEN = this;
		}
		
		private void detach_DANGKies(DANGKY entity)
		{
			this.SendPropertyChanging();
			entity.THANHVIEN = null;
		}
	}
}
#pragma warning restore 1591
